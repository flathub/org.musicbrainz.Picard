From cdfe9cef2dcc3edf7d05ca2e9c2dbbf8dea21f1c Mon Sep 17 00:00:00 2001
From: Paul Brossier <piem@piem.org>
Date: Sun, 26 Dec 2021 01:52:16 -0500
Subject: [PATCH] [source_avcodec] avoid deprecation warning with latest
 avcodec api (58.134.100)

---
 src/io/source_avcodec.c | 52 +++++++++++++++++++++++++++++++++++------
 1 file changed, 45 insertions(+), 7 deletions(-)

diff --git a/src/io/source_avcodec.c b/src/io/source_avcodec.c
index 5b25d85cc..e0ae93b5e 100644
--- a/src/io/source_avcodec.c
+++ b/src/io/source_avcodec.c
@@ -82,7 +82,11 @@ struct _aubio_source_avcodec_t {
   AVFormatContext *avFormatCtx;
   AVCodecContext *avCodecCtx;
   AVFrame *avFrame;
+#if FF_API_INIT_PACKET
+  AVPacket *avPacket;
+#else
   AVPacket avPacket;
+#endif
 #ifdef HAVE_AVRESAMPLE
   AVAudioResampleContext *avr;
 #elif defined(HAVE_SWRESAMPLE)
@@ -122,10 +126,14 @@ aubio_source_avcodec_t * new_aubio_source_avcodec(const char_t * path,
   AVFormatContext *avFormatCtx = NULL;
   AVCodecContext *avCodecCtx = NULL;
   AVFrame *avFrame = NULL;
+#if FF_API_INIT_PACKET
+  AVPacket *avPacket = NULL;
+#endif
   sint_t selected_stream = -1;
 #if FF_API_LAVF_AVCTX
   AVCodecParameters *codecpar;
 #endif
+
   AVCodec *codec;
   uint_t i;
   int err;
@@ -277,8 +285,17 @@ aubio_source_avcodec_t * new_aubio_source_avcodec(const char_t * path,
   avFrame = av_frame_alloc();
   if (!avFrame) {
     AUBIO_ERR("source_avcodec: Could not allocate frame for (%s)\n", s->path);
+    goto beach;
   }

+#if FF_API_INIT_PACKET
+  avPacket = av_packet_alloc();
+  if (!avPacket) {
+    AUBIO_ERR("source_avcodec: Could not allocate packet for (%s)\n", s->path);
+    goto beach;
+  }
+#endif
+
   /* allocate output for avr */
   s->output = (smpl_t *)av_malloc(AUBIO_AVCODEC_MAX_BUFFER_SIZE
       * sizeof(smpl_t));
@@ -289,6 +306,9 @@ aubio_source_avcodec_t * new_aubio_source_avcodec(const char_t * path,
   s->avFormatCtx = avFormatCtx;
   s->avCodecCtx = avCodecCtx;
   s->avFrame = avFrame;
+#if FF_API_INIT_PACKET
+  s->avPacket = avPacket;
+#endif

   aubio_source_avcodec_reset_resampler(s);

@@ -354,7 +374,11 @@ void aubio_source_avcodec_readframe(aubio_source_avcodec_t *s,
   AVFormatContext *avFormatCtx = s->avFormatCtx;
   AVCodecContext *avCodecCtx = s->avCodecCtx;
   AVFrame *avFrame = s->avFrame;
-  AVPacket avPacket = s->avPacket;
+#if FF_API_INIT_PACKET
+  AVPacket *avPacket = s->avPacket;
+#else
+  AVPacket *avPacket = &s->avPacket;
+#endif
 #ifdef HAVE_AVRESAMPLE
   AVAudioResampleContext *avr = s->avr;
 #elif defined(HAVE_SWRESAMPLE)
@@ -378,12 +402,14 @@ void aubio_source_avcodec_readframe(aubio_source_avcodec_t *s,
 #else
   int ret = 0;
 #endif
-  av_init_packet (&avPacket);
+#ifndef FF_API_INIT_PACKET
+  av_init_packet (avPacket);
+#endif
   *read_samples = 0;

   do
   {
-    int err = av_read_frame (avFormatCtx, &avPacket);
+    int err = av_read_frame (avFormatCtx, avPacket);
     if (err == AVERROR_EOF) {
       s->eof = 1;
       goto beach;
@@ -396,10 +422,10 @@ void aubio_source_avcodec_readframe(aubio_source_avcodec_t *s,
       s->eof = 1;
       goto beach;
     }
-  } while (avPacket.stream_index != s->selected_stream);
+  } while (avPacket->stream_index != s->selected_stream);

 #if FF_API_LAVF_AVCTX
-  ret = avcodec_send_packet(avCodecCtx, &avPacket);
+  ret = avcodec_send_packet(avCodecCtx, avPacket);
   if (ret < 0 && ret != AVERROR_EOF) {
     AUBIO_ERR("source_avcodec: error when sending packet for %s\n", s->path);
     goto beach;
@@ -422,7 +448,7 @@ void aubio_source_avcodec_readframe(aubio_source_avcodec_t *s,
     }
   }
 #else
-  len = avcodec_decode_audio4(avCodecCtx, avFrame, &got_frame, &avPacket);
+  len = avcodec_decode_audio4(avCodecCtx, avFrame, &got_frame, avPacket);

   if (len < 0) {
     AUBIO_ERR("source_avcodec: error while decoding %s\n", s->path);
@@ -472,7 +498,7 @@ void aubio_source_avcodec_readframe(aubio_source_avcodec_t *s,
   *read_samples = out_samples;

 beach:
-  av_packet_unref(&avPacket);
+  av_packet_unref(avPacket);
 }

 void aubio_source_avcodec_do(aubio_source_avcodec_t * s, fvec_t * read_data,
@@ -638,7 +664,13 @@ uint_t aubio_source_avcodec_close(aubio_source_avcodec_t * s) {
     avformat_close_input(&s->avFormatCtx);
     s->avFormatCtx = NULL;
   }
+#if FF_API_INIT_PACKET
+  if (s->avPacket) {
+    av_packet_unref(s->avPacket);
+  }
+#else
   av_packet_unref(&s->avPacket);
+#endif
   return AUBIO_OK;
 }

@@ -653,6 +685,12 @@ void del_aubio_source_avcodec(aubio_source_avcodec_t * s){
     av_frame_free( &(s->avFrame) );
   }
   s->avFrame = NULL;
+#if FF_API_INIT_PACKET
+  if (s->avPacket != NULL) {
+    av_packet_free( &(s->avPacket) );
+  }
+  s->avPacket = NULL;
+#endif
   if (s->path) {
     AUBIO_FREE(s->path);
   }



From 8a05420e5dd8c7b8b2447f82dc919765876511b3 Mon Sep 17 00:00:00 2001
From: Paul Brossier <piem@piem.org>
Date: Tue, 25 Jan 2022 18:30:27 +0100
Subject: [PATCH] [source_avcodec] define FF_API_LAVF_AVCTX for libavcodec >
 59, thx @berolinux (closes gh-353)

---
 src/io/source_avcodec.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/src/io/source_avcodec.c b/src/io/source_avcodec.c
index e0ae93b5..1421bd9a 100644
--- a/src/io/source_avcodec.c
+++ b/src/io/source_avcodec.c
@@ -68,6 +68,10 @@
 #define AUBIO_AVCODEC_MAX_BUFFER_SIZE AV_INPUT_BUFFER_MIN_SIZE
 #endif

+#if LIBAVCODEC_VERSION_MAJOR >= 59
+#define FF_API_LAVF_AVCTX 1
+#endif
+
 struct _aubio_source_avcodec_t {
   uint_t hop_size;
   uint_t samplerate;



From 245deeadd81afc4ec5635b65d71646490c5c19fd Mon Sep 17 00:00:00 2001
From: Paul Brossier <piem@piem.org>
Date: Wed, 27 Dec 2023 18:09:23 +0100
Subject: [PATCH] [source_avcodec] drop support for libavresample

---
 src/io/source_avcodec.c | 53 +----------------------------------------
 1 file changed, 1 insertion(+), 52 deletions(-)

diff --git a/src/io/source_avcodec.c b/src/io/source_avcodec.c
index 1421bd9a..011c3d78 100644
--- a/src/io/source_avcodec.c
+++ b/src/io/source_avcodec.c
@@ -24,11 +24,7 @@

 #include <libavcodec/avcodec.h>
 #include <libavformat/avformat.h>
-#if defined(HAVE_SWRESAMPLE)
 #include <libswresample/swresample.h>
-#elif defined(HAVE_AVRESAMPLE)
-#include <libavresample/avresample.h>
-#endif
 #include <libavutil/opt.h>

 // determine whether we use libavformat from ffmpeg or from libav
@@ -91,11 +87,7 @@ struct _aubio_source_avcodec_t {
 #else
   AVPacket avPacket;
 #endif
-#ifdef HAVE_AVRESAMPLE
-  AVAudioResampleContext *avr;
-#elif defined(HAVE_SWRESAMPLE)
   SwrContext *avr;
-#endif
   smpl_t *output;
   uint_t read_samples;
   uint_t read_index;
@@ -336,13 +328,9 @@ void aubio_source_avcodec_reset_resampler(aubio_source_avcodec_t * s)
   // create or reset resampler to/from mono/multi-channel
   if ( s->avr == NULL ) {
     int err;
+    SwrContext *avr = swr_alloc();
     int64_t input_layout = av_get_default_channel_layout(s->input_channels);
     int64_t output_layout = av_get_default_channel_layout(s->input_channels);
-#ifdef HAVE_AVRESAMPLE
-    AVAudioResampleContext *avr = avresample_alloc_context();
-#elif defined(HAVE_SWRESAMPLE)
-    SwrContext *avr = swr_alloc();
-#endif /* HAVE_AVRESAMPLE || HAVE_SWRESAMPLE */

     av_opt_set_int(avr, "in_channel_layout",  input_layout,              0);
     av_opt_set_int(avr, "out_channel_layout", output_layout,             0);
@@ -356,11 +344,7 @@ void aubio_source_avcodec_reset_resampler(aubio_source_avcodec_t * s)
 #endif
     // TODO: use planar?
     //av_opt_set_int(avr, "out_sample_fmt",     AV_SAMPLE_FMT_FLTP,      0);
-#ifdef HAVE_AVRESAMPLE
-    if ( ( err = avresample_open(avr) ) < 0)
-#elif defined(HAVE_SWRESAMPLE)
     if ( ( err = swr_init(avr) ) < 0)
-#endif /* HAVE_AVRESAMPLE || HAVE_SWRESAMPLE */
     {
       char errorstr[256];
       av_strerror (err, errorstr, sizeof(errorstr));
@@ -383,23 +367,11 @@ void aubio_source_avcodec_readframe(aubio_source_avcodec_t *s,
 #else
   AVPacket *avPacket = &s->avPacket;
 #endif
-#ifdef HAVE_AVRESAMPLE
-  AVAudioResampleContext *avr = s->avr;
-#elif defined(HAVE_SWRESAMPLE)
   SwrContext *avr = s->avr;
-#endif /* HAVE_AVRESAMPLE || HAVE_SWRESAMPLE */
   int got_frame = 0;
-#ifdef HAVE_AVRESAMPLE
-  int in_linesize = 0;
-  int in_samples = avFrame->nb_samples;
-  int out_linesize = 0;
-  int max_out_samples = AUBIO_AVCODEC_MAX_BUFFER_SIZE;
-  int out_samples = 0;
-#elif defined(HAVE_SWRESAMPLE)
   int in_samples = avFrame->nb_samples;
   int max_out_samples = AUBIO_AVCODEC_MAX_BUFFER_SIZE / avCodecCtx->channels;
   int out_samples = 0;
-#endif /* HAVE_AVRESAMPLE || HAVE_SWRESAMPLE */
   smpl_t *output = s->output;
 #ifndef FF_API_LAVF_AVCTX
   int len = 0;
@@ -476,23 +448,11 @@ void aubio_source_avcodec_readframe(aubio_source_avcodec_t *s,
 #warning "avutil < 53 is deprecated, crashes might occur on corrupt files"
 #endif

-#ifdef HAVE_AVRESAMPLE
-  in_linesize = 0;
-  av_samples_get_buffer_size(&in_linesize, avCodecCtx->channels,
-      avFrame->nb_samples, avCodecCtx->sample_fmt, 1);
-  in_samples = avFrame->nb_samples;
-  out_linesize = 0;
-  max_out_samples = AUBIO_AVCODEC_MAX_BUFFER_SIZE;
-  out_samples = avresample_convert ( avr,
-        (uint8_t **)&output, out_linesize, max_out_samples,
-        (uint8_t **)avFrame->data, in_linesize, in_samples);
-#elif defined(HAVE_SWRESAMPLE)
   in_samples = avFrame->nb_samples;
   max_out_samples = AUBIO_AVCODEC_MAX_BUFFER_SIZE / avCodecCtx->channels;
   out_samples = swr_convert( avr,
       (uint8_t **)&output, max_out_samples,
       (const uint8_t **)avFrame->data, in_samples);
-#endif /* HAVE_AVRESAMPLE || HAVE_SWRESAMPLE */
   if (out_samples < 0) {
     AUBIO_WRN("source_avcodec: error while resampling %s (%d)\n",
         s->path, out_samples);
@@ -626,14 +586,8 @@ uint_t aubio_source_avcodec_seek (aubio_source_avcodec_t * s, uint_t pos) {
   s->eof = 0;
   s->read_index = 0;
   s->read_samples = 0;
-#ifdef HAVE_AVRESAMPLE
-  // reset the AVAudioResampleContext
-  avresample_close(s->avr);
-  avresample_open(s->avr);
-#elif defined(HAVE_SWRESAMPLE)
   swr_close(s->avr);
   swr_init(s->avr);
-#endif
   return ret;
 }

@@ -647,13 +601,8 @@ uint_t aubio_source_avcodec_get_duration (aubio_source_avcodec_t * s) {

 uint_t aubio_source_avcodec_close(aubio_source_avcodec_t * s) {
   if (s->avr != NULL) {
-#ifdef HAVE_AVRESAMPLE
-    avresample_close( s->avr );
-    av_free ( s->avr );
-#elif defined(HAVE_SWRESAMPLE)
     swr_close ( s->avr );
     swr_free ( &s->avr );
-#endif
   }
   s->avr = NULL;
   if (s->avCodecCtx != NULL) {



From 128acfdcdcc13fcf4333a01c425b83028e746694 Mon Sep 17 00:00:00 2001
From: Paul Brossier <piem@piem.org>
Date: Wed, 27 Dec 2023 18:18:00 +0100
Subject: [PATCH] [source_avcodec] use a const pointer for AVCodec

---
 src/io/source_avcodec.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/io/source_avcodec.c b/src/io/source_avcodec.c
index 011c3d78..bac74a5b 100644
--- a/src/io/source_avcodec.c
+++ b/src/io/source_avcodec.c
@@ -130,7 +130,7 @@ aubio_source_avcodec_t * new_aubio_source_avcodec(const char_t * path,
   AVCodecParameters *codecpar;
 #endif

-  AVCodec *codec;
+  const AVCodec *codec;
   uint_t i;
   int err;
   if (path == NULL) {



From 0b947f9634937d27589d995ec90e90d763aca86f Mon Sep 17 00:00:00 2001
From: Paul Brossier <piem@piem.org>
Date: Wed, 27 Dec 2023 18:39:35 +0100
Subject: [PATCH] [source_avcodec] add support for AVChannelLayout (ffmpeg 5.1)

---
 src/io/source_avcodec.c | 30 +++++++++++++++++++++++++++---
 1 file changed, 27 insertions(+), 3 deletions(-)

diff --git a/src/io/source_avcodec.c b/src/io/source_avcodec.c
index bac74a5b..713ad040 100644
--- a/src/io/source_avcodec.c
+++ b/src/io/source_avcodec.c
@@ -263,7 +263,11 @@ aubio_source_avcodec_t * new_aubio_source_avcodec(const char_t * path,

   /* get input specs */
   s->input_samplerate = avCodecCtx->sample_rate;
+#ifdef AVUTIL_CHANNEL_LAYOUT_H
+  s->input_channels   = avCodecCtx->ch_layout.nb_channels;
+#else
   s->input_channels   = avCodecCtx->channels;
+#endif
   //AUBIO_DBG("input_samplerate: %d\n", s->input_samplerate);
   //AUBIO_DBG("input_channels: %d\n", s->input_channels);

@@ -329,11 +333,21 @@ void aubio_source_avcodec_reset_resampler(aubio_source_avcodec_t * s)
   if ( s->avr == NULL ) {
     int err;
     SwrContext *avr = swr_alloc();
+#ifdef AVUTIL_CHANNEL_LAYOUT_H
+    AVChannelLayout input_layout;
+    AVChannelLayout output_layout;
+    av_channel_layout_default(&input_layout, s->input_channels);
+    av_channel_layout_default(&output_layout, s->input_channels);
+
+    av_opt_set_chlayout(avr, "in_channel_layout",  &input_layout,        0);
+    av_opt_set_chlayout(avr, "out_channel_layout", &output_layout,       0);
+#else
     int64_t input_layout = av_get_default_channel_layout(s->input_channels);
     int64_t output_layout = av_get_default_channel_layout(s->input_channels);

     av_opt_set_int(avr, "in_channel_layout",  input_layout,              0);
     av_opt_set_int(avr, "out_channel_layout", output_layout,             0);
+#endif
     av_opt_set_int(avr, "in_sample_rate",     s->input_samplerate,       0);
     av_opt_set_int(avr, "out_sample_rate",    s->samplerate,             0);
     av_opt_set_int(avr, "in_sample_fmt",      s->avCodecCtx->sample_fmt, 0);
@@ -370,7 +384,11 @@ void aubio_source_avcodec_readframe(aubio_source_avcodec_t *s,
   SwrContext *avr = s->avr;
   int got_frame = 0;
   int in_samples = avFrame->nb_samples;
+#ifdef AVUTIL_CHANNEL_LAYOUT_H
+  int max_out_samples = AUBIO_AVCODEC_MAX_BUFFER_SIZE / avCodecCtx->ch_layout.nb_channels;
+#else
   int max_out_samples = AUBIO_AVCODEC_MAX_BUFFER_SIZE / avCodecCtx->channels;
+#endif
   int out_samples = 0;
   smpl_t *output = s->output;
 #ifndef FF_API_LAVF_AVCTX
@@ -438,10 +456,15 @@ void aubio_source_avcodec_readframe(aubio_source_avcodec_t *s,
   }

 #if LIBAVUTIL_VERSION_MAJOR > 52
-  if (avFrame->channels != (sint_t)s->input_channels) {
+#ifdef AVUTIL_CHANNEL_LAYOUT_H
+  int frame_channels = avFrame->ch_layout.nb_channels;
+#else
+  int frame_channels = avFrame->channels;
+#endif
+  if (frame_channels != (sint_t)s->input_channels) {
     AUBIO_WRN ("source_avcodec: trying to read from %d channel(s),"
         "but configured for %d; is '%s' corrupt?\n",
-        avFrame->channels, s->input_channels, s->path);
+        frame_channels, s->input_channels, s->path);
     goto beach;
   }
 #else
@@ -449,7 +472,8 @@ void aubio_source_avcodec_readframe(aubio_source_avcodec_t *s,
 #endif

   in_samples = avFrame->nb_samples;
-  max_out_samples = AUBIO_AVCODEC_MAX_BUFFER_SIZE / avCodecCtx->channels;
+  max_out_samples = AUBIO_AVCODEC_MAX_BUFFER_SIZE;
+  if (frame_channels > 0) max_out_samples /= frame_channels;
   out_samples = swr_convert( avr,
       (uint8_t **)&output, max_out_samples,
       (const uint8_t **)avFrame->data, in_samples);



From 53bc55cda4f0e106e63b8a993538fa4debf4bb66 Mon Sep 17 00:00:00 2001
From: Paul Brossier <piem@piem.org>
Date: Wed, 27 Dec 2023 18:58:55 +0100
Subject: [PATCH] [source_avcodec] adjust detection of AVChannelLayout (>
 ffmpeg 5.0)

---
 src/io/source_avcodec.c | 14 ++++++++++----
 1 file changed, 10 insertions(+), 4 deletions(-)

diff --git a/src/io/source_avcodec.c b/src/io/source_avcodec.c
index 713ad040..7b4dd857 100644
--- a/src/io/source_avcodec.c
+++ b/src/io/source_avcodec.c
@@ -52,6 +52,12 @@
 #define av_packet_unref av_free_packet
 #endif

+#if LIBAVUTIL_VERSION_INT < AV_VERSION_INT(57,28,100)
+#warning "libavutil < 57.28.100 is deprecated"
+#else
+#define LIBAVUTIL_HAS_CH_LAYOUT
+#endif
+
 #include "aubio_priv.h"
 #include "fvec.h"
 #include "fmat.h"
@@ -263,7 +269,7 @@ aubio_source_avcodec_t * new_aubio_source_avcodec(const char_t * path,

   /* get input specs */
   s->input_samplerate = avCodecCtx->sample_rate;
-#ifdef AVUTIL_CHANNEL_LAYOUT_H
+#ifdef LIBAVUTIL_HAS_CH_LAYOUT
   s->input_channels   = avCodecCtx->ch_layout.nb_channels;
 #else
   s->input_channels   = avCodecCtx->channels;
@@ -333,7 +339,7 @@ void aubio_source_avcodec_reset_resampler(aubio_source_avcodec_t * s)
   if ( s->avr == NULL ) {
     int err;
     SwrContext *avr = swr_alloc();
-#ifdef AVUTIL_CHANNEL_LAYOUT_H
+#ifdef LIBAVUTIL_HAS_CH_LAYOUT
     AVChannelLayout input_layout;
     AVChannelLayout output_layout;
     av_channel_layout_default(&input_layout, s->input_channels);
@@ -384,7 +390,7 @@ void aubio_source_avcodec_readframe(aubio_source_avcodec_t *s,
   SwrContext *avr = s->avr;
   int got_frame = 0;
   int in_samples = avFrame->nb_samples;
-#ifdef AVUTIL_CHANNEL_LAYOUT_H
+#ifdef LIBAVUTIL_HAS_CH_LAYOUT
   int max_out_samples = AUBIO_AVCODEC_MAX_BUFFER_SIZE / avCodecCtx->ch_layout.nb_channels;
 #else
   int max_out_samples = AUBIO_AVCODEC_MAX_BUFFER_SIZE / avCodecCtx->channels;
@@ -456,7 +462,7 @@ void aubio_source_avcodec_readframe(aubio_source_avcodec_t *s,
   }

 #if LIBAVUTIL_VERSION_MAJOR > 52
-#ifdef AVUTIL_CHANNEL_LAYOUT_H
+#ifdef LIBAVUTIL_HAS_CH_LAYOUT
   int frame_channels = avFrame->ch_layout.nb_channels;
 #else
   int frame_channels = avFrame->channels;



From 8e9d3a3696e1384f21e8a7b9bc302b17bfb912b4 Mon Sep 17 00:00:00 2001
From: Paul Brossier <piem@piem.org>
Date: Wed, 27 Dec 2023 19:23:13 +0100
Subject: [PATCH] [source_avcodec] remove deprecation warning (< ffmpeg 5.1)

---
 src/io/source_avcodec.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/io/source_avcodec.c b/src/io/source_avcodec.c
index 7b4dd857..71ea8b5f 100644
--- a/src/io/source_avcodec.c
+++ b/src/io/source_avcodec.c
@@ -53,7 +53,7 @@
 #endif

 #if LIBAVUTIL_VERSION_INT < AV_VERSION_INT(57,28,100)
-#warning "libavutil < 57.28.100 is deprecated"
+//#warning "libavutil < 57.28.100 is deprecated"
 #else
 #define LIBAVUTIL_HAS_CH_LAYOUT
 #endif
